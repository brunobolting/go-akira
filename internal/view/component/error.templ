package component

import "akira/internal/view/component/icon"


templ Error(message string) {
	<div role="alert" class="alert alert-error alert-dash">
  		<span>{ message }</span>
	</div>
}

var handleGlobal = templ.NewOnceHandle()
templ GlobalError() {
	@handleGlobal.Once() {
		<div id="toast-container" class="fixed top-5 right-5 z-50 flex gap-2 hidden alert alert-error cursor-pointer px-4 py-2 rounded shadow-lg transition-opacity duration-300 opacity-100">
			@icon.WarningTriagle()
		</div>
		<script>
			const params = new URLSearchParams(window.location.search)
			if (params.has("error")) {
				showToast(params.get("error"))
				window.history.replaceState({}, document.title, window.location.pathname)
			}

			document.body.addEventListener('htmx:responseError', function(event) {
				const message = event.detail.xhr.responseText || "An error occurred"
				showToast(message)
			});

			function showToast(message) {
				const toastContainer = document.getElementById("toast-container")
				toastContainer.classList.remove("hidden")
				toastContainer.style.opacity = "1";
				const toast = document.createElement("div")
				toast.innerHTML += `<span>${message}</span>`
				toast.addEventListener("click", () => {
					toastContainer.classList.add("hidden")
					toast.remove()
				})
				setTimeout(() => {
					toastContainer.style.opacity = "0";
					setTimeout(() => {
						toastContainer.classList.add("hidden")
						toast.remove()
					}, 300)
				}, 5000)
				toastContainer.appendChild(toast)
			}
		</script>
	}
}
