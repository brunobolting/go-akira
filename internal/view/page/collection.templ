package page

import "akira/internal/view/layout"

templ CreateCollection() {
	@layout.Page("Create Collection") {
		<div class="container mx-auto px-4 py-6">
			<div class="flex items-center justify-between mb-6">
				<h1 class="text-2xl font-bold">Create New Collection</h1>
				<a href="/dashboard" class="btn btn-outline btn-sm">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
					</svg>
					Back to Dashboard
				</a>
			</div>
			<div class="bg-base-100 rounded-lg shadow-sm p-6">
				<form hx-post="/collection/create" hx-swap="outerHTML" class="space-y-8">
					<!-- Basic Collection Info -->
					<div>
						<h2 class="text-lg font-medium mb-4">Collection Information</h2>
						<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Title*</span>
								</label>
								<input
									type="text"
									name="title"
									placeholder="E.g. Chainsaw Man, One Piece"
									class="input input-bordered w-full"
									required
									hx-post="/collection/generate-slug"
									hx-target="#slug-preview"
									hx-trigger="keyup changed delay:500ms"
								/>
								<label class="label">
									<span class="label-text-alt">Collection name as it appears officially</span>
								</label>
							</div>
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Slug</span>
									<span class="label-text-alt">Auto-generated</span>
								</label>
								<div class="flex gap-2">
									<input
										type="text"
										name="slug"
										placeholder="chainsaw-man"
										class="input input-bordered w-full"
										readonly
										id="slug-field"
									/>
									<button
										type="button"
										class="btn btn-square btn-outline btn-sm"
										id="edit-slug-btn"
										onclick="toggleSlugEdit()"
									>
										<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
										</svg>
									</button>
								</div>
								<label class="label">
									<span class="label-text-alt" id="slug-preview">URL-friendly version of the title</span>
								</label>
							</div>
						</div>
						<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4">
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Publisher</span>
								</label>
								<select name="publisher" class="select select-bordered w-full">
									<option value="" selected disabled>Select a publisher</option>
									<option value="panini">Panini</option>
									<option value="jbc">JBC</option>
									<option value="newpop">NewPOP</option>
									<option value="intrinseca">Intrínseca</option>
									<option value="darkside">DarkSide</option>
									<option value="pipoca">Pipoca & Nanquim</option>
									<option value="other">Other</option>
								</select>
							</div>
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Category</span>
								</label>
								<select name="category" class="select select-bordered w-full">
									<option value="" selected disabled>Select a category</option>
									<option value="manga">Manga</option>
									<option value="comic">Comic</option>
									<option value="book">Book</option>
									<option value="lightnovel">Light Novel</option>
									<option value="other">Other</option>
								</select>
							</div>
						</div>
						<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4">
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Total Volumes</span>
									<span class="label-text-alt">If known</span>
								</label>
								<input
									type="number"
									name="total_volumes"
									min="0"
									placeholder="E.g. 20 (0 for ongoing)"
									class="input input-bordered w-full"
								/>
							</div>
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Status</span>
								</label>
								<select name="status" class="select select-bordered w-full">
									<option value="ongoing" selected>Ongoing</option>
									<option value="completed">Completed</option>
									<option value="hiatus">On Hiatus</option>
									<option value="cancelled">Cancelled</option>
								</select>
							</div>
						</div>
						<div class="form-control w-full mt-4">
							<label class="label">
								<span class="label-text font-medium">Description</span>
								<span class="label-text-alt">Optional</span>
							</label>
							<textarea
								name="description"
								placeholder="Brief description about this collection"
								class="textarea textarea-bordered h-24"
							></textarea>
						</div>
					</div>
					<!-- Cover image upload -->
					<div>
						<h2 class="text-lg font-medium mb-4">Cover Image</h2>
						<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 items-start">
							<div class="form-control w-full">
								<div class="border-2 border-dashed border-base-300 rounded-lg p-8 text-center hover:bg-base-200/50 transition-colors cursor-pointer">
									<input type="file" name="cover_image" id="cover_image" class="hidden" accept="image/*"/>
									<label for="cover_image" class="w-full h-full cursor-pointer flex flex-col items-center justify-center">
										<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-base-content/60 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
										</svg>
										<p class="text-base-content/80 font-medium">Click or drag and drop to upload cover image</p>
										<p class="text-xs text-base-content/60 mt-2">PNG, JPG or WEBP (Max 2MB)</p>
									</label>
								</div>
							</div>
							<div class="bg-base-200 rounded-lg flex items-center justify-center min-h-[300px] aspect-[2/3]" id="image-preview">
								<p class="text-base-content/50">Cover image preview will appear here</p>
							</div>
						</div>
					</div>
					<!-- Metadata for scraping -->
					<div>
						<div class="flex items-center justify-between mb-4">
							<h2 class="text-lg font-medium">Metadata for Scraping</h2>
							<div class="tooltip" data-tip="These terms help the system find your collection on various websites">
								<button type="button" class="btn btn-ghost btn-circle btn-sm">
									<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
									</svg>
								</button>
							</div>
						</div>
						<div class="space-y-4">
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Search Terms</span>
									<span class="label-text-alt">Add multiple, separated by Enter</span>
								</label>
								<div class="flex items-start gap-2">
									<div class="flex-1">
										<input
											type="text"
											id="search-term-input"
											placeholder="E.g. 'Chainsaw Man', 'チェンソーマン', 'Tatsuki Fujimoto'"
											class="input input-bordered w-full"
											onkeydown="addSearchTermOnEnter(event)"
										/>
										<label class="label">
											<span class="label-text-alt">Different versions of the title, author names, etc.</span>
										</label>
									</div>
									<button
										type="button"
										class="btn btn-outline"
										onclick="addSearchTerm()"
									>
										Add
									</button>
								</div>
								<div id="search-terms-container" class="flex flex-wrap gap-2 mt-2">
									<!-- Search terms will be inserted here dynamically -->
								</div>
								<input type="hidden" name="search_terms" id="search_terms_input" value=""/>
							</div>
							<div class="form-control w-full">
								<label class="label">
									<span class="label-text font-medium">Sites for Scraping</span>
								</label>
								<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
									<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3">
										<input type="checkbox" name="scraping_sites" value="amazon" class="checkbox checkbox-sm" checked/>
										<span class="label-text">Amazon</span>
									</label>
									<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3">
										<input type="checkbox" name="scraping_sites" value="panini" class="checkbox checkbox-sm" checked/>
										<span class="label-text">Panini</span>
									</label>
									<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3">
										<input type="checkbox" name="scraping_sites" value="jbc" class="checkbox checkbox-sm" checked/>
										<span class="label-text">JBC</span>
									</label>
									<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3">
										<input type="checkbox" name="scraping_sites" value="newpop" class="checkbox checkbox-sm"/>
										<span class="label-text">NewPOP</span>
									</label>
									<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3">
										<input type="checkbox" name="scraping_sites" value="submarino" class="checkbox checkbox-sm"/>
										<span class="label-text">Submarino</span>
									</label>
									<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3">
										<input type="checkbox" name="scraping_sites" value="mercadolivre" class="checkbox checkbox-sm"/>
										<span class="label-text">Mercado Livre</span>
									</label>
								</div>
							</div>
						</div>
					</div>
					<!-- Tracking options -->
					<div>
						<h2 class="text-lg font-medium mb-4">Tracking Options</h2>
						<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
							<div class="space-y-3">
								<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3 hover:bg-base-200/30 transition-colors">
									<input type="checkbox" name="track_prices" class="checkbox checkbox-primary checkbox-sm" checked/>
									<div>
										<span class="label-text font-medium block">Track Price Changes</span>
										<span class="text-xs text-base-content/70">Get notified when prices drop for missing volumes</span>
									</div>
								</label>
								<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3 hover:bg-base-200/30 transition-colors">
									<input type="checkbox" name="notify_releases" class="checkbox checkbox-primary checkbox-sm" checked/>
									<div>
										<span class="label-text font-medium block">Notify about New Releases</span>
										<span class="text-xs text-base-content/70">Get alerts when new volumes are released</span>
									</div>
								</label>
								<label class="label cursor-pointer justify-start gap-3 border border-base-300 rounded-lg p-3 hover:bg-base-200/30 transition-colors">
									<input type="checkbox" name="public_collection" class="checkbox checkbox-primary checkbox-sm"/>
									<div>
										<span class="label-text font-medium block">Make Collection Public</span>
										<span class="text-xs text-base-content/70">Allow other users to view your collection</span>
									</div>
								</label>
							</div>
							<div class="form-control w-full space-y-3">
								<label class="label">
									<span class="label-text font-medium">Price Alert Threshold</span>
								</label>
								<div class="relative">
									<input
										type="range"
										name="discount_threshold"
										min="5"
										max="50"
										value="15"
										class="range range-primary"
										step="5"
										oninput="updateRangeValue(this.value)"
									/>
									<div class="w-full flex justify-between text-xs px-2 mt-1">
										<span>5%</span>
										<span>15%</span>
										<span>25%</span>
										<span>35%</span>
										<span>45%</span>
										<span>50%</span>
									</div>
								</div>
								<div class="text-center text-sm font-medium" id="threshold-value">
									Alert me when discounts are at least 15%
								</div>
							</div>
						</div>
					</div>
					<div class="border-t border-base-300 pt-6 mt-6">
						<div class="flex justify-end gap-3">
							<button type="button" class="btn btn-outline" onclick="window.history.back();">
								Cancel
							</button>
							<button type="submit" class="btn btn-primary">
								Create Collection
							</button>
						</div>
					</div>
				</form>
			</div>
		</div>
		<script>
            // Handle slug editing functionality
            function toggleSlugEdit() {
                const slugField = document.getElementById('slug-field');
                const editButton = document.getElementById('edit-slug-btn');

                if (slugField.readOnly) {
                    slugField.readOnly = false;
                    slugField.focus();
                    editButton.classList.add('btn-primary');
                    editButton.classList.remove('btn-outline');
                } else {
                    slugField.readOnly = true;
                    editButton.classList.remove('btn-primary');
                    editButton.classList.add('btn-outline');
                }
            }

            // Handle search terms functionality
            let searchTerms = [];

            function addSearchTerm() {
                const input = document.getElementById('search-term-input');
                const term = input.value.trim();

                if (term && !searchTerms.includes(term)) {
                    searchTerms.push(term);
                    updateSearchTermsDisplay();
                    updateSearchTermsInput();
                    input.value = '';
                }
            }

            function addSearchTermOnEnter(event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    addSearchTerm();
                }
            }

            function removeSearchTerm(term) {
                searchTerms = searchTerms.filter(t => t !== term);
                updateSearchTermsDisplay();
                updateSearchTermsInput();
            }

            function updateSearchTermsDisplay() {
                const container = document.getElementById('search-terms-container');
                container.innerHTML = '';

                searchTerms.forEach(term => {
                    const badge = document.createElement('div');
                    badge.className = 'badge badge-lg gap-2 py-4';
                    badge.innerHTML = `
                        ${term}
                        <button type="button" onclick="removeSearchTerm('${term}')" class="btn btn-xs btn-ghost btn-circle">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    `;
                    container.appendChild(badge);
                });
            }

            function updateSearchTermsInput() {
                document.getElementById('search_terms_input').value = JSON.stringify(searchTerms);
            }

            // Handle image preview
            document.addEventListener('DOMContentLoaded', function() {
                const imageInput = document.getElementById('cover_image');
                const imagePreview = document.getElementById('image-preview');

                imageInput.addEventListener('change', function() {
                    if (this.files && this.files[0]) {
                        const reader = new FileReader();

                        reader.onload = function(e) {
                            imagePreview.innerHTML = `<img src="${e.target.result}" class="rounded-lg w-full h-full object-contain" />`;
                        }

                        reader.readAsDataURL(this.files[0]);
                    }
                });
            });

            // Handle price threshold display
            function updateRangeValue(value) {
                document.getElementById('threshold-value').textContent = `Alert me when discounts are at least ${value}%`;
            }
        </script>
	}
}
